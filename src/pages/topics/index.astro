---
import Layout from "@/layouts/Layout.astro";
import Breadcrumb from "@/components/Breadcrumb";
import { getCollection } from "astro:content";

const topics = await getCollection("topics");
---

<Layout
  title="English Arena | Learn English by Topic."
  description="Choose a topic and practice your English with fun quizzes."
>
  <h1 class="text-4xl font-bold mb-6">Topics</h1>

  <!-- 🔍 Search input -->
  <input
    id="search"
    type="text"
    placeholder="Search topics..."
    class="w-full max-w-md px-4 py-2 mb-6 border border-gray-300 rounded-md bg-white text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-800 dark:text-white dark:placeholder-gray-400"
  />

  <div id="topics-list" class="grid gap-2">
    {
      topics.map(({ slug, data }) => (
        <a
          href={`/topics/${slug}`}
          class="topic block p-4 border border-gray-200 dark:border-gray-700 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-800 transition"
          data-title={data.title.toLowerCase()}
          data-description={data.description?.toLowerCase() || ""}
          data-tags={(data.tags || []).join(" ").toLowerCase()}
        >
          <h2 class="text-xl font-semibold">{data.title}</h2>

          {data.description && (
            <p class="text-gray-600 dark:text-gray-300">{data.description}</p>
          )}

          {data.tags && data.tags.length > 0 && (
            <div class="flex flex-wrap gap-2 mt-2">
              {data.tags.map((tag) => (
                <span class="inline-block px-3 py-1 text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-100 rounded-full">
                  #{tag}
                </span>
              ))}
            </div>
          )}
        </a>
      ))
    }
  </div>

  <!-- 🔧 Client-side filtering script -->
  <script is:inline>
    const input = document.getElementById("search");
    const cards = document.querySelectorAll("#topics-list .topic");

    input.addEventListener("input", () => {
      const value = input.value.toLowerCase();

      cards.forEach((card) => {
        const title = card.dataset.title;
        const description = card.dataset.description;
        const tags = card.dataset.tags;

        const visible =
          title.includes(value) ||
          description.includes(value) ||
          tags.includes(value);

        card.style.display = visible ? "block" : "none";
      });
    });
  </script>
</Layout>
